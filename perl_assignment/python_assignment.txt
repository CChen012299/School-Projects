CS-371

Python Assignment 

Christopher Chen

1.

	a) The most near equivalent to Perl's 'use strict;' pragma would the '__future__' function, albeit haaving a small scope and only enabled for the source file
		https://stackoverflow.com/questions/13425715/does-python-have-a-use-strict-and-use-warnings-like-in-perl/13473229

	b) The equivalent to Perl's '-w' runtime option would be 'from warnings import warn', allowing for a function for a warning message on runtime

	c) One way to avoid mistakes would be to allow for warnings when running Python to be enabled, allowing for it to show all warnings to the user by using the command python -W all 


2.
	input_file = codecs.open('english.sorted.python', 'r', 'iso-88591').read()

	wordlengths = {}

	for word in input_file.readlines():
    		length = len(word) - 1

    		if (length in wordlengths):
        	wordlengths[length] += 1
    		else:
        	wordlengths[length] = 1

	print("Word Length\t\tOccurrences")

	for length in sorted(wordlengths.keys()):
    		print ('%i\t\t\t%i' % (printlength,wordlengths[length]))

3. 

	inputFile = open("old webadvisor roster.txt", "r")
	outFile = open("roster", "w")

	temp = ''
	lineCount = 0


	for line in inputFile.readlines():
    		if line.strip() == '':
        		temp = temp.rstrip(', ')
        		lineCount = 0
        		outFile.write(temp + '\n')
        		temp = ''
        		continue 

    		elif lineCount in [0, 1, 3, 4, 5]:
        		temp += line.strip('\n') + ', '

    		lineCount += 1

4.
	import calendar
	import sys
	y = int(sys.argv[1])
	m = int(sys.argv[2])
	print(calendar.month(m, y))